;; Single source shortest path

(a-edge "a" "b" 10)
(a-edge "a" "e" 3)
(a-edge "e" "b" 1)
(a-edge "b" "e" 4)
(a-edge "b" "c" 2)
(a-edge "e" "c" 8)
(a-edge "e" "d" 2)
(a-edge "d" "c" 7)
(a-edge "c" "d" 9)

(member ?(do-member x (nil)) (false))
(member ?(do-member x (list x rst)) (true))
[(member ?(do-member x (list hd rst)) (true)) <-- (=/= hd x) (member !(do-member x rst) (true))]
[(member ?(do-member x (list hd rst)) (false)) <-- (=/= hd x) (member !(do-member x rst) (false))]
[(do-member 2 l) <-- (input-list l)]

[(node a) (node b) <-- (a-edge a b _)]
(source-node "a")

; brute force
[(path from to (list to (list from (nil ))) w) <-- (a-edge from to w)]
[(path from mid pt acc-w)
 (a-edge mid to w)
 (member !(do-member to pt) (false))
    -->
    (path from to (list to pt) {+ acc-w w})]
[(shortest-path from to {minimum path from to _}) <-- (path from to _ _) (source-node from)]
